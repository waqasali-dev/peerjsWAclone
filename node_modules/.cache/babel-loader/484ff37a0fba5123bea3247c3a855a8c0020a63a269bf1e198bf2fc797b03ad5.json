{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shogun\\\\my-new-app\\\\src\\\\components\\\\Chatapp2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./chatapp.css\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport SendIcon from '@mui/icons-material/Send';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { v4 as uuidv4 } from 'uuid';\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatapp = () => {\n  _s();\n  // Persistent UUID - only generated once per session\n  const [myUUID, setMyUUID] = useState(\"\");\n\n  // UI State\n  const [idViewed, setIdViewed] = useState(false);\n  const [addperson, setAddperson] = useState(false);\n  const [showContacts, setShowContacts] = useState(false);\n\n  // Contact Management\n  const [contacts, setContacts] = useState([]);\n  const [newContactUUID, setNewContactUUID] = useState(\"\");\n  const [newContactName, setNewContactName] = useState(\"\");\n\n  // Chat State\n  const [activeChatId, setActiveChatId] = useState(null);\n  const [chatSessions, setChatSessions] = useState({});\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // P2P Connection\n  const [connectionSignals, setConnectionSignals] = useState({});\n  const peerRefs = useRef({});\n\n  // Initialize UUID on component mount\n  useEffect(() => {\n    const savedUUID = localStorage.getItem('chatapp-uuid');\n    if (savedUUID) {\n      setMyUUID(savedUUID);\n    } else {\n      const newUUID = uuidv4();\n      setMyUUID(newUUID);\n      localStorage.setItem('chatapp-uuid', newUUID);\n    }\n  }, []);\n\n  // Load contacts from localStorage\n  useEffect(() => {\n    const savedContacts = localStorage.getItem('chatapp-contacts');\n    if (savedContacts) {\n      setContacts(JSON.parse(savedContacts));\n    }\n  }, []);\n\n  // Save contacts to localStorage whenever they change\n  useEffect(() => {\n    if (contacts.length > 0) {\n      localStorage.setItem('chatapp-contacts', JSON.stringify(contacts));\n    }\n  }, [contacts]);\n  const addContact = () => {\n    if (!newContactUUID.trim() || !newContactName.trim()) {\n      alert(\"Please enter both UUID and name for the contact.\");\n      return;\n    }\n    if (newContactUUID === myUUID) {\n      alert(\"You cannot add yourself as a contact.\");\n      return;\n    }\n    if (contacts.some(contact => contact.uuid === newContactUUID)) {\n      alert(\"This contact already exists.\");\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      uuid: newContactUUID,\n      name: newContactName,\n      isOnline: false,\n      lastSeen: new Date()\n    };\n    setContacts(prev => [...prev, newContact]);\n    setNewContactUUID(\"\");\n    setNewContactName(\"\");\n    setAddperson(false);\n  };\n  const initiateChat = contactId => {\n    const contact = contacts.find(c => c.id === contactId);\n    if (!contact) return;\n\n    // Create or get existing chat session\n    if (!chatSessions[contactId]) {\n      const newSession = {\n        contactId,\n        messages: [],\n        peer: null,\n        isConnected: false\n      };\n      setChatSessions(prev => ({\n        ...prev,\n        [contactId]: newSession\n      }));\n    }\n    setActiveChatId(contactId);\n    setShowContacts(false);\n\n    // Initiate P2P connection\n    createPeerConnection(contactId, true);\n  };\n  const createPeerConnection = (contactId, isInitiator) => {\n    try {\n      const peer = new Peer({\n        initiator: isInitiator,\n        trickle: false\n      });\n      peer.on(\"signal\", data => {\n        // Store the signal for this specific contact\n        setConnectionSignals(prev => ({\n          ...prev,\n          [contactId]: JSON.stringify(data)\n        }));\n        console.log(`Connection signal for ${contactId}:`, JSON.stringify(data));\n      });\n      peer.on(\"connect\", () => {\n        setChatSessions(prev => ({\n          ...prev,\n          [contactId]: {\n            ...prev[contactId],\n            isConnected: true,\n            peer\n          }\n        }));\n        console.log(`Connected to ${contactId}`);\n      });\n      peer.on(\"data\", data => {\n        const message = {\n          sender: \"Peer\",\n          message: data.toString(),\n          timestamp: new Date()\n        };\n        setChatSessions(prev => {\n          var _prev$contactId;\n          return {\n            ...prev,\n            [contactId]: {\n              ...prev[contactId],\n              messages: [...(((_prev$contactId = prev[contactId]) === null || _prev$contactId === void 0 ? void 0 : _prev$contactId.messages) || []), message]\n            }\n          };\n        });\n      });\n      peer.on(\"error\", err => {\n        console.error(`Peer connection error for ${contactId}:`, err);\n      });\n      peer.on(\"close\", () => {\n        setChatSessions(prev => ({\n          ...prev,\n          [contactId]: {\n            ...prev[contactId],\n            isConnected: false,\n            peer: null\n          }\n        }));\n      });\n      peerRefs.current[contactId] = peer;\n    } catch (error) {\n      console.error(`Failed to create peer connection for ${contactId}:`, error);\n    }\n  };\n  const connectToPeer = (contactId, signalData) => {\n    try {\n      const peer = peerRefs.current[contactId];\n      if (peer) {\n        peer.signal(JSON.parse(signalData));\n      }\n    } catch (error) {\n      console.error(`Failed to connect to peer ${contactId}:`, error);\n    }\n  };\n  const sendMessage = () => {\n    if (!activeChatId || !newMessage.trim()) return;\n    const session = chatSessions[activeChatId];\n    if (!session || !session.isConnected || !session.peer) {\n      alert(\"Not connected to this contact. Please establish a connection first.\");\n      return;\n    }\n    try {\n      session.peer.send(newMessage);\n      const message = {\n        sender: \"You\",\n        message: newMessage,\n        timestamp: new Date()\n      };\n      setChatSessions(prev => ({\n        ...prev,\n        [activeChatId]: {\n          ...prev[activeChatId],\n          messages: [...prev[activeChatId].messages, message]\n        }\n      }));\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to send message:\", error);\n    }\n  };\n  const getActiveChat = () => {\n    return activeChatId ? chatSessions[activeChatId] : null;\n  };\n  const getActiveContact = () => {\n    if (!activeChatId) return null;\n    return contacts.find(c => c.id === activeChatId);\n  };\n  const activeChat = getActiveChat();\n  const activeContact = getActiveContact();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chatapp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatapp-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatapp-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          title: \"Show my UUID\",\n          children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n            onClick: () => setIdViewed(!idViewed),\n            style: {\n              fontSize: 40,\n              color: '#000000ff',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          title: \"Add new contact\",\n          style: {\n            marginLeft: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {\n            onClick: () => setAddperson(!addperson),\n            style: {\n              fontSize: 40,\n              color: '#000000ff',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          title: \"Show contacts\",\n          style: {\n            marginLeft: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n            onClick: () => setShowContacts(!showContacts),\n            style: {\n              fontSize: 40,\n              color: '#000000ff',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), activeContact && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 20,\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 16,\n              fontWeight: 'bold'\n            },\n            children: [activeContact.name, \"(\", activeChat !== null && activeChat !== void 0 && activeChat.isConnected ? 'Connected' : 'Disconnected', \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatapp-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatapp-message\",\n          children: !activeChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              color: '#666',\n              marginTop: 50\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a contact to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Or add a new contact using their UUID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this) : activeChat.messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              color: '#666',\n              marginTop: 50\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No messages yet. Start the conversation!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this) : activeChat.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.sender === \"You\" ? \"sent-message\" : \"received-message\",\n            children: [msg.message, /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 10,\n                opacity: 0.6,\n                marginTop: 2\n              },\n              children: msg.timestamp.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatapp-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"mesgInput\",\n            placeholder: activeChat ? \"Type a message...\" : \"Select a contact first...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            disabled: !activeChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n            style: {\n              fontSize: 50,\n              color: activeChat ? '#000000ff' : '#cccccc',\n              marginLeft: 10,\n              cursor: activeChat ? 'pointer' : 'not-allowed'\n            },\n            onClick: sendMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: () => setIdViewed(!idViewed),\n      style: {\n        visibility: idViewed ? 'visible' : 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your UUID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Share this UUID with others to let them add you as a contact:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"unique-id\",\n          value: myUUID,\n          readOnly: true,\n          style: {\n            height: '60px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigator.clipboard.writeText(myUUID),\n          children: \"Copy to Clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: () => setAddperson(!addperson),\n      style: {\n        visibility: addperson ? 'visible' : 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter the contact's UUID and a name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Contact's UUID\",\n          value: newContactUUID,\n          onChange: e => setNewContactUUID(e.target.value),\n          style: {\n            width: '100%',\n            marginBottom: '10px',\n            padding: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Contact's Name\",\n          value: newContactName,\n          onChange: e => setNewContactName(e.target.value),\n          style: {\n            width: '100%',\n            marginBottom: '10px',\n            padding: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addContact,\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: () => setShowContacts(!showContacts),\n      style: {\n        visibility: showContacts ? 'visible' : 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), contacts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No contacts yet. Add some contacts to start chatting!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: '300px',\n            overflowY: 'auto'\n          },\n          children: contacts.map(contact => {\n            var _chatSessions$contact;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                border: '1px solid #ddd',\n                borderRadius: '5px',\n                padding: '10px',\n                marginBottom: '10px',\n                cursor: 'pointer',\n                backgroundColor: activeChatId === contact.id ? '#e3f2fd' : 'white'\n              },\n              onClick: () => initiateChat(contact.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: contact.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#666'\n                },\n                children: [\"UUID: \", contact.uuid.substring(0, 8), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#666'\n                },\n                children: [\"Status: \", (_chatSessions$contact = chatSessions[contact.id]) !== null && _chatSessions$contact !== void 0 && _chatSessions$contact.isConnected ? 'Connected' : 'Disconnected']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 37\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatapp, \"i08JI5EWA+Tp7BghAGvaxU6VJ44=\");\n_c = Chatapp;\nexport default Chatapp;\nvar _c;\n$RefreshReg$(_c, \"Chatapp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PersonIcon","PersonAddIcon","SendIcon","ChatIcon","v4","uuidv4","Peer","jsxDEV","_jsxDEV","Chatapp","_s","myUUID","setMyUUID","idViewed","setIdViewed","addperson","setAddperson","showContacts","setShowContacts","contacts","setContacts","newContactUUID","setNewContactUUID","newContactName","setNewContactName","activeChatId","setActiveChatId","chatSessions","setChatSessions","newMessage","setNewMessage","connectionSignals","setConnectionSignals","peerRefs","savedUUID","localStorage","getItem","newUUID","setItem","savedContacts","JSON","parse","length","stringify","addContact","trim","alert","some","contact","uuid","newContact","id","name","isOnline","lastSeen","Date","prev","initiateChat","contactId","find","c","newSession","messages","peer","isConnected","createPeerConnection","isInitiator","initiator","trickle","on","data","console","log","message","sender","toString","timestamp","_prev$contactId","err","error","current","connectToPeer","signalData","signal","sendMessage","session","send","getActiveChat","getActiveContact","activeChat","activeContact","className","children","title","onClick","style","fontSize","color","cursor","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","display","alignItems","fontWeight","textAlign","marginTop","map","msg","index","opacity","toLocaleTimeString","placeholder","value","onChange","e","target","disabled","visibility","stopPropagation","readOnly","height","navigator","clipboard","writeText","type","width","marginBottom","padding","maxHeight","overflowY","_chatSessions$contact","border","borderRadius","backgroundColor","substring","_c","$RefreshReg$"],"sources":["C:/Users/Shogun/my-new-app/src/components/Chatapp2.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./chatapp.css\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Peer from \"simple-peer\";\r\n\r\ninterface Contact {\r\n    id: string;\r\n    uuid: string;\r\n    name: string;\r\n    isOnline: boolean;\r\n    lastSeen: Date;\r\n}\r\n\r\ninterface ChatSession {\r\n    contactId: string;\r\n    messages: { sender: string; message: string; timestamp: Date }[];\r\n    peer: Peer.Instance | null;\r\n    isConnected: boolean;\r\n}\r\n\r\nconst Chatapp: React.FC = () => {\r\n    // Persistent UUID - only generated once per session\r\n    const [myUUID, setMyUUID] = useState<string>(\"\");\r\n    \r\n    // UI State\r\n    const [idViewed, setIdViewed] = useState<boolean>(false);\r\n    const [addperson, setAddperson] = useState<boolean>(false);\r\n    const [showContacts, setShowContacts] = useState<boolean>(false);\r\n    \r\n    // Contact Management\r\n    const [contacts, setContacts] = useState<Contact[]>([]);\r\n    const [newContactUUID, setNewContactUUID] = useState<string>(\"\");\r\n    const [newContactName, setNewContactName] = useState<string>(\"\");\r\n    \r\n    // Chat State\r\n    const [activeChatId, setActiveChatId] = useState<string | null>(null);\r\n    const [chatSessions, setChatSessions] = useState<{ [key: string]: ChatSession }>({});\r\n    const [newMessage, setNewMessage] = useState<string>(\"\");\r\n    \r\n    // P2P Connection\r\n    const [connectionSignals, setConnectionSignals] = useState<{ [key: string]: string }>({});\r\n    const peerRefs = useRef<{ [key: string]: Peer.Instance }>({});\r\n\r\n    // Initialize UUID on component mount\r\n    useEffect(() => {\r\n        const savedUUID = localStorage.getItem('chatapp-uuid');\r\n        if (savedUUID) {\r\n            setMyUUID(savedUUID);\r\n        } else {\r\n            const newUUID = uuidv4();\r\n            setMyUUID(newUUID);\r\n            localStorage.setItem('chatapp-uuid', newUUID);\r\n        }\r\n    }, []);\r\n\r\n    // Load contacts from localStorage\r\n    useEffect(() => {\r\n        const savedContacts = localStorage.getItem('chatapp-contacts');\r\n        if (savedContacts) {\r\n            setContacts(JSON.parse(savedContacts));\r\n        }\r\n    }, []);\r\n\r\n    // Save contacts to localStorage whenever they change\r\n    useEffect(() => {\r\n        if (contacts.length > 0) {\r\n            localStorage.setItem('chatapp-contacts', JSON.stringify(contacts));\r\n        }\r\n    }, [contacts]);\r\n\r\n    const addContact = () => {\r\n        if (!newContactUUID.trim() || !newContactName.trim()) {\r\n            alert(\"Please enter both UUID and name for the contact.\");\r\n            return;\r\n        }\r\n\r\n        if (newContactUUID === myUUID) {\r\n            alert(\"You cannot add yourself as a contact.\");\r\n            return;\r\n        }\r\n\r\n        if (contacts.some(contact => contact.uuid === newContactUUID)) {\r\n            alert(\"This contact already exists.\");\r\n            return;\r\n        }\r\n\r\n        const newContact: Contact = {\r\n            id: uuidv4(),\r\n            uuid: newContactUUID,\r\n            name: newContactName,\r\n            isOnline: false,\r\n            lastSeen: new Date()\r\n        };\r\n\r\n        setContacts(prev => [...prev, newContact]);\r\n        setNewContactUUID(\"\");\r\n        setNewContactName(\"\");\r\n        setAddperson(false);\r\n    };\r\n\r\n    const initiateChat = (contactId: string) => {\r\n        const contact = contacts.find(c => c.id === contactId);\r\n        if (!contact) return;\r\n\r\n        // Create or get existing chat session\r\n        if (!chatSessions[contactId]) {\r\n            const newSession: ChatSession = {\r\n                contactId,\r\n                messages: [],\r\n                peer: null,\r\n                isConnected: false\r\n            };\r\n            setChatSessions(prev => ({ ...prev, [contactId]: newSession }));\r\n        }\r\n\r\n        setActiveChatId(contactId);\r\n        setShowContacts(false);\r\n        \r\n        // Initiate P2P connection\r\n        createPeerConnection(contactId, true);\r\n    };\r\n\r\n    const createPeerConnection = (contactId: string, isInitiator: boolean) => {\r\n        try {\r\n            const peer = new Peer({ initiator: isInitiator, trickle: false });\r\n            \r\n            peer.on(\"signal\", (data) => {\r\n                // Store the signal for this specific contact\r\n                setConnectionSignals(prev => ({\r\n                    ...prev,\r\n                    [contactId]: JSON.stringify(data)\r\n                }));\r\n                console.log(`Connection signal for ${contactId}:`, JSON.stringify(data));\r\n            });\r\n\r\n            peer.on(\"connect\", () => {\r\n                setChatSessions(prev => ({\r\n                    ...prev,\r\n                    [contactId]: {\r\n                        ...prev[contactId],\r\n                        isConnected: true,\r\n                        peer\r\n                    }\r\n                }));\r\n                console.log(`Connected to ${contactId}`);\r\n            });\r\n\r\n            peer.on(\"data\", (data) => {\r\n                const message = {\r\n                    sender: \"Peer\",\r\n                    message: data.toString(),\r\n                    timestamp: new Date()\r\n                };\r\n                \r\n                setChatSessions(prev => ({\r\n                    ...prev,\r\n                    [contactId]: {\r\n                        ...prev[contactId],\r\n                        messages: [...(prev[contactId]?.messages || []), message]\r\n                    }\r\n                }));\r\n            });\r\n\r\n            peer.on(\"error\", (err) => {\r\n                console.error(`Peer connection error for ${contactId}:`, err);\r\n            });\r\n\r\n            peer.on(\"close\", () => {\r\n                setChatSessions(prev => ({\r\n                    ...prev,\r\n                    [contactId]: {\r\n                        ...prev[contactId],\r\n                        isConnected: false,\r\n                        peer: null\r\n                    }\r\n                }));\r\n            });\r\n\r\n            peerRefs.current[contactId] = peer;\r\n        } catch (error) {\r\n            console.error(`Failed to create peer connection for ${contactId}:`, error);\r\n        }\r\n    };\r\n\r\n    const connectToPeer = (contactId: string, signalData: string) => {\r\n        try {\r\n            const peer = peerRefs.current[contactId];\r\n            if (peer) {\r\n                peer.signal(JSON.parse(signalData));\r\n            }\r\n        } catch (error) {\r\n            console.error(`Failed to connect to peer ${contactId}:`, error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (!activeChatId || !newMessage.trim()) return;\r\n\r\n        const session = chatSessions[activeChatId];\r\n        if (!session || !session.isConnected || !session.peer) {\r\n            alert(\"Not connected to this contact. Please establish a connection first.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            session.peer.send(newMessage);\r\n            \r\n            const message = {\r\n                sender: \"You\",\r\n                message: newMessage,\r\n                timestamp: new Date()\r\n            };\r\n            \r\n            setChatSessions(prev => ({\r\n                ...prev,\r\n                [activeChatId]: {\r\n                    ...prev[activeChatId],\r\n                    messages: [...prev[activeChatId].messages, message]\r\n                }\r\n            }));\r\n            \r\n            setNewMessage(\"\");\r\n        } catch (error) {\r\n            console.error(\"Failed to send message:\", error);\r\n        }\r\n    };\r\n\r\n    const getActiveChat = () => {\r\n        return activeChatId ? chatSessions[activeChatId] : null;\r\n    };\r\n\r\n    const getActiveContact = () => {\r\n        if (!activeChatId) return null;\r\n        return contacts.find(c => c.id === activeChatId);\r\n    };\r\n\r\n    const activeChat = getActiveChat();\r\n    const activeContact = getActiveContact();\r\n\r\n    return (\r\n        <div className=\"Chatapp-container\">\r\n            <div className=\"chatapp-content\">\r\n                <div className=\"chatapp-header\">\r\n                    <div title=\"Show my UUID\">\r\n                        <PersonIcon\r\n                            onClick={() => setIdViewed(!idViewed)}\r\n                            style={{ fontSize: 40, color: '#000000ff', cursor: 'pointer' }}\r\n                        />\r\n                    </div>\r\n                    <div title=\"Add new contact\" style={{ marginLeft: 20 }}>\r\n                        <PersonAddIcon\r\n                            onClick={() => setAddperson(!addperson)}\r\n                            style={{ fontSize: 40, color: '#000000ff', cursor: 'pointer' }}\r\n                        />\r\n                    </div>\r\n                    <div title=\"Show contacts\" style={{ marginLeft: 20 }}>\r\n                        <ChatIcon\r\n                            onClick={() => setShowContacts(!showContacts)}\r\n                            style={{ fontSize: 40, color: '#000000ff', cursor: 'pointer' }}\r\n                        />\r\n                    </div>\r\n                    {activeContact && (\r\n                        <div style={{ marginLeft: 20, display: 'flex', alignItems: 'center' }}>\r\n                            <span style={{ fontSize: 16, fontWeight: 'bold' }}>\r\n                                {activeContact.name} \r\n                                ({activeChat?.isConnected ? 'Connected' : 'Disconnected'})\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                \r\n                <div className=\"chatapp-messages\">\r\n                    <div className=\"chatapp-message\">\r\n                        {!activeChat ? (\r\n                            <div style={{ textAlign: 'center', color: '#666', marginTop: 50 }}>\r\n                                <p>Select a contact to start chatting</p>\r\n                                <p>Or add a new contact using their UUID</p>\r\n                            </div>\r\n                        ) : activeChat.messages.length === 0 ? (\r\n                            <div style={{ textAlign: 'center', color: '#666', marginTop: 50 }}>\r\n                                <p>No messages yet. Start the conversation!</p>\r\n                            </div>\r\n                        ) : (\r\n                            activeChat.messages.map((msg, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className={msg.sender === \"You\" ? \"sent-message\" : \"received-message\"}\r\n                                >\r\n                                    {msg.message}\r\n                                    <div style={{ fontSize: 10, opacity: 0.6, marginTop: 2 }}>\r\n                                        {msg.timestamp.toLocaleTimeString()}\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"chatapp-input\">\r\n                    <div className=\"input-container\">\r\n                        <textarea\r\n                            className=\"mesgInput\"\r\n                            placeholder={activeChat ? \"Type a message...\" : \"Select a contact first...\"}\r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                            disabled={!activeChat}\r\n                        />\r\n                        <SendIcon\r\n                            style={{ \r\n                                fontSize: 50, \r\n                                color: activeChat ? '#000000ff' : '#cccccc', \r\n                                marginLeft: 10, \r\n                                cursor: activeChat ? 'pointer' : 'not-allowed' \r\n                            }}\r\n                            onClick={sendMessage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* My UUID Overlay */}\r\n            <div className=\"overlay\" onClick={() => setIdViewed(!idViewed)} style={{ visibility: idViewed ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Your UUID</h2>\r\n                    <p>Share this UUID with others to let them add you as a contact:</p>\r\n                    <textarea\r\n                        className=\"unique-id\"\r\n                        value={myUUID}\r\n                        readOnly\r\n                        style={{ height: '60px', fontSize: '14px' }}\r\n                    />\r\n                    <button onClick={() => navigator.clipboard.writeText(myUUID)}>\r\n                        Copy to Clipboard\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Add Contact Overlay */}\r\n            <div className=\"overlay\" onClick={() => setAddperson(!addperson)} style={{ visibility: addperson ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Add New Contact</h2>\r\n                    <p>Enter the contact's UUID and a name:</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Contact's UUID\"\r\n                        value={newContactUUID}\r\n                        onChange={(e) => setNewContactUUID(e.target.value)}\r\n                        style={{ width: '100%', marginBottom: '10px', padding: '10px' }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Contact's Name\"\r\n                        value={newContactName}\r\n                        onChange={(e) => setNewContactName(e.target.value)}\r\n                        style={{ width: '100%', marginBottom: '10px', padding: '10px' }}\r\n                    />\r\n                    <button onClick={addContact}>Add Contact</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Contacts List Overlay */}\r\n            <div className=\"overlay\" onClick={() => setShowContacts(!showContacts)} style={{ visibility: showContacts ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Your Contacts</h2>\r\n                    {contacts.length === 0 ? (\r\n                        <p>No contacts yet. Add some contacts to start chatting!</p>\r\n                    ) : (\r\n                        <div style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n                            {contacts.map((contact) => (\r\n                                <div\r\n                                    key={contact.id}\r\n                                    style={{\r\n                                        border: '1px solid #ddd',\r\n                                        borderRadius: '5px',\r\n                                        padding: '10px',\r\n                                        marginBottom: '10px',\r\n                                        cursor: 'pointer',\r\n                                        backgroundColor: activeChatId === contact.id ? '#e3f2fd' : 'white'\r\n                                    }}\r\n                                    onClick={() => initiateChat(contact.id)}\r\n                                >\r\n                                    <div style={{ fontWeight: 'bold' }}>{contact.name}</div>\r\n                                    <div style={{ fontSize: '12px', color: '#666' }}>\r\n                                        UUID: {contact.uuid.substring(0, 8)}...\r\n                                    </div>\r\n                                    <div style={{ fontSize: '12px', color: '#666' }}>\r\n                                        Status: {chatSessions[contact.id]?.isConnected ? 'Connected' : 'Disconnected'}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatapp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}