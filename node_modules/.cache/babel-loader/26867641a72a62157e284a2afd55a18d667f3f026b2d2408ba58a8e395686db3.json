{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./chatapp.css\";import PersonIcon from'@mui/icons-material/Person';import PersonAddIcon from'@mui/icons-material/PersonAdd';import SendIcon from'@mui/icons-material/Send';import{v4 as uuidv4}from'uuid';import Peer from\"peerjs\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatapp=()=>{const[uniqueId,setUniqueId]=useState(\"\");const[idViewed,setIdViewed]=useState(false);const[addperson,setAddperson]=useState(false);const[peer,setPeer]=useState(null);const[connection,setConnection]=useState(null);const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState(\"\");const[connectedTo,setConnectedTo]=useState(\"\");const[contactId,setContactId]=useState(\"\");useEffect(()=>{const savedID=localStorage.getItem('uniqueId');if(savedID){setUniqueId(savedID);}else{const newID=uuidv4();setUniqueId(newID);localStorage.setItem('uniqueId',newID);}},[]);useEffect(()=>{const newPeer=new Peer(uniqueId);newPeer.on('open',id=>{console.log('My peer ID is: '+id);setPeer(newPeer);});newPeer.on('connection',conn=>{conn.on('open',()=>{console.log('Connection established with: '+conn.peer);setConnectedTo(conn.peer);setConnection(conn);conn.on('data',data=>{console.log('Received',data);setMessages(prevMessages=>[...prevMessages,{text:data,isOwn:false}]);});});});return()=>{newPeer.destroy();};},[uniqueId]);const connectToPeer=peerId=>{if(peer&&peerId){const conn=peer.connect(peerId);conn.on('open',()=>{console.log('Connection established with: '+peerId);setConnectedTo(peerId);setConnection(conn);});conn.on('data',data=>{console.log('Received',data);setMessages(prevMessages=>[...prevMessages,{text:data,isOwn:false}]);});setConnection(conn);}};const sendMessage=()=>{if(connection&&inputMessage.trim()!==\"\"){connection.send(inputMessage);setMessages(prevMessages=>[...prevMessages,{text:inputMessage,isOwn:true}]);setInputMessage(\"\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"Chatapp-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatapp-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatapp-header\",children:[/*#__PURE__*/_jsx(PersonIcon,{onClick:()=>setIdViewed(!idViewed),style:{fontSize:40,color:'#000000ff'}}),/*#__PURE__*/_jsx(PersonAddIcon,{onClick:()=>setAddperson(!addperson),style:{fontSize:40,color:'#000000ff',marginLeft:45}}),connectedTo&&/*#__PURE__*/_jsxs(\"span\",{style:{color:'white',marginLeft:'20px'},children:[\"Connected to: \",connectedTo]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatapp-messages\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chatapp-message\",children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:msg.isOwn?\"sent-message\":\"received-message\",children:msg.text},index))})}),/*#__PURE__*/_jsx(\"div\",{className:\"chatapp-input\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"mesgInput\",placeholder:\"Type a message...\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),onKeyDown:e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage();}}}),/*#__PURE__*/_jsx(SendIcon,{onClick:sendMessage,style:{fontSize:50,color:'#000000ff',marginLeft:10,cursor:'pointer'}})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",onClick:()=>setIdViewed(!idViewed),style:{visibility:idViewed?'visible':'hidden'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"overlay-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome to ChatApp!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your unique ID is:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"unique-id\",children:uniqueId}),/*#__PURE__*/_jsx(\"p\",{children:\"Share this ID with others to start chatting.\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",onClick:()=>setAddperson(!addperson),style:{visibility:addperson?'visible':'hidden'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"overlay-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add a New Contact\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter contact ID\",className:\"contact-input\",onChange:e=>setContactId(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"add-contact-button\",onClick:()=>{connectToPeer(contactId);setAddperson(false);},children:\"Add Contact\"})]})})]});};export default Chatapp;","map":{"version":3,"names":["React","useState","useEffect","PersonIcon","PersonAddIcon","SendIcon","v4","uuidv4","Peer","jsx","_jsx","jsxs","_jsxs","Chatapp","uniqueId","setUniqueId","idViewed","setIdViewed","addperson","setAddperson","peer","setPeer","connection","setConnection","messages","setMessages","inputMessage","setInputMessage","connectedTo","setConnectedTo","contactId","setContactId","savedID","localStorage","getItem","newID","setItem","newPeer","on","id","console","log","conn","data","prevMessages","text","isOwn","destroy","connectToPeer","peerId","connect","sendMessage","trim","send","className","children","onClick","style","fontSize","color","marginLeft","map","msg","index","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","cursor","visibility","stopPropagation","type"],"sources":["C:/Users/Shogun/my-new-app/src/components/Chatapp.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./chatapp.css\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Peer, { DataConnection } from \"peerjs\";\r\n\r\nconst Chatapp: React.FC = () => {\r\n\r\n    const [uniqueId, setUniqueId] = useState<string>(\"\");\r\n    const [idViewed, setIdViewed] = useState<boolean>(false);\r\n    const [addperson, setAddperson] = useState<boolean>(false);\r\n    const [peer, setPeer] = useState<Peer | null>(null);\r\n    const [connection, setConnection] = useState<DataConnection | null>(null);\r\n    const [messages, setMessages] = useState<Array<{ text: string, isOwn: boolean }>>([]);\r\n    const [inputMessage, setInputMessage] = useState<string>(\"\");\r\n    const [connectedTo, setConnectedTo] = useState<string>(\"\");\r\n    const [contactId, setContactId] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        const savedID = localStorage.getItem('uniqueId');\r\n        if (savedID) {\r\n            setUniqueId(savedID);\r\n        } else {\r\n            const newID = uuidv4();\r\n            setUniqueId(newID);\r\n            localStorage.setItem('uniqueId', newID);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const newPeer = new Peer(uniqueId);\r\n\r\n        newPeer.on('open', (id) => {\r\n            console.log('My peer ID is: ' + id);\r\n            setPeer(newPeer);\r\n        });\r\n\r\n        newPeer.on('connection', (conn) => {\r\n            conn.on('open', () => {\r\n                console.log('Connection established with: ' + conn.peer);\r\n                setConnectedTo(conn.peer);\r\n                setConnection(conn);\r\n\r\n                conn.on('data', (data) => {\r\n                    console.log('Received', data);\r\n                    setMessages(prevMessages => [...prevMessages, { text: data as string, isOwn: false }]);\r\n                });\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            newPeer.destroy();\r\n        }\r\n    }, [uniqueId]);\r\n\r\n    const connectToPeer = (peerId: string) => {\r\n        if (peer && peerId) {\r\n            const conn = peer.connect(peerId);\r\n            conn.on('open', () => {\r\n                console.log('Connection established with: ' + peerId);\r\n                setConnectedTo(peerId);\r\n                setConnection(conn);\r\n            });\r\n\r\n            conn.on('data', (data) => {\r\n                console.log('Received', data);\r\n                setMessages(prevMessages => [...prevMessages, { text: data as string, isOwn: false }]);\r\n            });\r\n\r\n            setConnection(conn);\r\n        }\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (connection && inputMessage.trim() !== \"\") {\r\n            connection.send(inputMessage);\r\n            setMessages(prevMessages => [...prevMessages, { text: inputMessage, isOwn: true }]);\r\n            setInputMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Chatapp-container\">\r\n            <div className=\"chatapp-content\">\r\n                <div className=\"chatapp-header\">\r\n                    <PersonIcon\r\n                        onClick={() => setIdViewed(!idViewed)}\r\n                        style={{ fontSize: 40, color: '#000000ff' }}\r\n                    />\r\n                    <PersonAddIcon\r\n                        onClick={() => setAddperson(!addperson)}\r\n                        style={{ fontSize: 40, color: '#000000ff', marginLeft: 45 }}\r\n                    />\r\n                    {connectedTo && (\r\n                        <span style={{ color: 'white', marginLeft: '20px' }}>\r\n                            Connected to: {connectedTo}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"chatapp-messages\">\r\n                    <div className=\"chatapp-message\">\r\n\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={msg.isOwn ? \"sent-message\" : \"received-message\"}>\r\n                                {msg.text}\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatapp-input\">\r\n                    <div className=\"input-container\">\r\n                        <textarea\r\n                            className=\"mesgInput\"\r\n                            placeholder=\"Type a message...\"\r\n                            value={inputMessage}\r\n                            onChange={(e) => setInputMessage(e.target.value)}\r\n                            onKeyDown={(e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); sendMessage(); } }}\r\n                        />\r\n                        <SendIcon\r\n                            onClick={sendMessage}\r\n                            style={{ fontSize: 50, color: '#000000ff', marginLeft: 10, cursor: 'pointer' }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"overlay\" onClick={() => setIdViewed(!idViewed)} style={{ visibility: idViewed ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Welcome to ChatApp!</h2>\r\n                    <p>Your unique ID is:</p>\r\n                    <p className=\"unique-id\">{uniqueId}</p>\r\n                    <p>Share this ID with others to start chatting.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"overlay\" onClick={() => setAddperson(!addperson)} style={{ visibility: addperson ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Add a New Contact</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter contact ID\"\r\n                        className=\"contact-input\"\r\n                        onChange={(e) => setContactId(e.target.value)}\r\n                    />\r\n                    <button\r\n                        className=\"add-contact-button\"\r\n                        onClick={() => {\r\n                            connectToPeer(contactId)\r\n                            setAddperson(false);\r\n                        }}\r\n                    >\r\n                        Add Contact\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatapp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}