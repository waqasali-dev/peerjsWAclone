{"ast":null,"code":"import React,{createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext({user:null,login:()=>{},logout:()=>{}});export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const login=username=>setUser(username);const logout=()=>setUser(null);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","AuthContext","user","login","logout","AuthProvider","_ref","children","setUser","username","Provider","value"],"sources":["C:/Users/Shogun/my-new-app/src/context/Authcontext.tsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext<{\r\n    user: string | null;\r\n    login: (username: string) => void;\r\n    logout: () => void;\r\n}>({\r\n    user: null,\r\n    login: () => {},\r\n    logout: () => {},\r\n});\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [user, setUser] = useState<string | null>(null);\r\n    const login = (username: string) => setUser(username);\r\n    const logout = () => setUser(null);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,MAAO,MAAM,CAAAC,WAAW,cAAGJ,aAAa,CAIrC,CACCK,IAAI,CAAE,IAAI,CACVC,KAAK,CAAEA,CAAA,GAAM,CAAC,CAAC,CACfC,MAAM,CAAEA,CAAA,GAAM,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9E,KAAM,CAACJ,IAAI,CAAEM,OAAO,CAAC,CAAGV,QAAQ,CAAgB,IAAI,CAAC,CACrD,KAAM,CAAAK,KAAK,CAAIM,QAAgB,EAAKD,OAAO,CAACC,QAAQ,CAAC,CACrD,KAAM,CAAAL,MAAM,CAAGA,CAAA,GAAMI,OAAO,CAAC,IAAI,CAAC,CAElC,mBACIR,IAAA,CAACC,WAAW,CAACS,QAAQ,EAACC,KAAK,CAAE,CAAET,IAAI,CAAEC,KAAK,CAAEC,MAAO,CAAE,CAAAG,QAAA,CAChDA,QAAQ,CACS,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}