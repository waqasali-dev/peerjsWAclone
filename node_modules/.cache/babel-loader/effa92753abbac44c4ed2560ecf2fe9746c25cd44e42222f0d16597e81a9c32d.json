{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shogun\\\\my-new-app\\\\src\\\\components\\\\Chatapp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./chatapp.css\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport SendIcon from '@mui/icons-material/Send';\nimport { v4 as uuidv4 } from 'uuid';\nimport Peer from \"peerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatapp = () => {\n  _s();\n  const [uniqueId, setUniqueId] = useState(\"\");\n  const [idViewed, setIdViewed] = useState(false);\n  const [addperson, setAddperson] = useState(false);\n  const [peer, setPeer] = useState(null);\n  const [connection, setConnection] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [connectedTo, setConnectedTo] = useState(\"\");\n  const [contactId, setContactId] = useState(\"\");\n  useEffect(() => {\n    const savedID = localStorage.getItem('uniqueId');\n    if (savedID) {\n      setUniqueId(savedID);\n    } else {\n      const newID = uuidv4();\n      setUniqueId(newID);\n      localStorage.setItem('uniqueId', newID);\n    }\n  }, []);\n  useEffect(() => {\n    const newPeer = new Peer(uniqueId);\n    newPeer.on('open', id => {\n      console.log('My peer ID is: ' + id);\n      setPeer(newPeer);\n    });\n    newPeer.on('connection', conn => {\n      conn.on('open', () => {\n        console.log('Connection established with: ' + conn.peer);\n        setConnectedTo(conn.peer);\n        setConnection(conn);\n        conn.on('data', data => {\n          console.log('Received', data);\n          setMessages(prevMessages => [...prevMessages, {\n            text: data,\n            isOwn: false\n          }]);\n        });\n      });\n    });\n    return () => {\n      newPeer.destroy();\n    };\n  }, [uniqueId]);\n  const connectToPeer = peerId => {\n    if (peer && peerId) {\n      const conn = peer.connect(peerId);\n      conn.on('open', () => {\n        console.log('Connection established with: ' + peerId);\n        setConnectedTo(peerId);\n        setConnection(conn);\n      });\n      conn.on('data', data => {\n        console.log('Received', data);\n        setMessages(prevMessages => [...prevMessages, {\n          text: data,\n          isOwn: false\n        }]);\n      });\n      setConnection(conn);\n    }\n  };\n  const sendMessage = () => {\n    if (connection && inputMessage.trim() !== \"\") {\n      connection.send(inputMessage);\n      setMessages(prevMessages => [...prevMessages, {\n        text: inputMessage,\n        isOwn: true\n      }]);\n      setInputMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chatapp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatapp-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatapp-header\",\n        children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n          onClick: () => setIdViewed(!idViewed),\n          style: {\n            fontSize: 40,\n            color: '#000000ff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PersonAddIcon, {\n          onClick: () => setAddperson(!addperson),\n          style: {\n            fontSize: 40,\n            color: '#000000ff',\n            marginLeft: 45\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), connectedTo && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'white',\n            marginLeft: '20px'\n          },\n          children: [\"Connected to: \", connectedTo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatapp-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatapp-message\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.isOwn ? \"sent-message\" : \"received-message\",\n            children: msg.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatapp-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"mesgInput\",\n            placeholder: \"Type a message...\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                sendMessage();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n            onClick: sendMessage,\n            style: {\n              fontSize: 50,\n              color: '#000000ff',\n              marginLeft: 10,\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: () => setIdViewed(!idViewed),\n      style: {\n        visibility: idViewed ? 'visible' : 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to ChatApp!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your unique ID is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"unique-id\",\n          children: uniqueId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Share this ID with others to start chatting.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: () => setAddperson(!addperson),\n      style: {\n        visibility: addperson ? 'visible' : 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add a New Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter contact ID\",\n          className: \"contact-input\",\n          onChange: e => setContactId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-contact-button\",\n          onClick: () => {\n            connectToPeer(contactId);\n            setAddperson(false);\n          },\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatapp, \"V69+zN9vLssOHe84rIWQ3v20FQo=\");\n_c = Chatapp;\nexport default Chatapp;\nvar _c;\n$RefreshReg$(_c, \"Chatapp\");","map":{"version":3,"names":["React","useState","useEffect","PersonIcon","PersonAddIcon","SendIcon","v4","uuidv4","Peer","jsxDEV","_jsxDEV","Chatapp","_s","uniqueId","setUniqueId","idViewed","setIdViewed","addperson","setAddperson","peer","setPeer","connection","setConnection","messages","setMessages","inputMessage","setInputMessage","connectedTo","setConnectedTo","contactId","setContactId","savedID","localStorage","getItem","newID","setItem","newPeer","on","id","console","log","conn","data","prevMessages","text","isOwn","destroy","connectToPeer","peerId","connect","sendMessage","trim","send","className","children","onClick","style","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","map","msg","index","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","preventDefault","cursor","visibility","stopPropagation","type","_c","$RefreshReg$"],"sources":["C:/Users/Shogun/my-new-app/src/components/Chatapp.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./chatapp.css\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Peer, { DataConnection } from \"peerjs\";\r\n\r\nconst Chatapp: React.FC = () => {\r\n\r\n    const [uniqueId, setUniqueId] = useState<string>(\"\");\r\n    const [idViewed, setIdViewed] = useState<boolean>(false);\r\n    const [addperson, setAddperson] = useState<boolean>(false);\r\n    const [peer, setPeer] = useState<Peer | null>(null);\r\n    const [connection, setConnection] = useState<DataConnection | null>(null);\r\n    const [messages, setMessages] = useState<Array<{ text: string, isOwn: boolean }>>([]);\r\n    const [inputMessage, setInputMessage] = useState<string>(\"\");\r\n    const [connectedTo, setConnectedTo] = useState<string>(\"\");\r\n    const [contactId, setContactId] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        const savedID = localStorage.getItem('uniqueId');\r\n        if (savedID) {\r\n            setUniqueId(savedID);\r\n        } else {\r\n            const newID = uuidv4();\r\n            setUniqueId(newID);\r\n            localStorage.setItem('uniqueId', newID);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        const newPeer = new Peer(uniqueId);\r\n\r\n        newPeer.on('open', (id) => {\r\n            console.log('My peer ID is: ' + id);\r\n            setPeer(newPeer);\r\n        });\r\n\r\n        newPeer.on('connection', (conn) => {\r\n            conn.on('open', () => {\r\n                console.log('Connection established with: ' + conn.peer);\r\n                setConnectedTo(conn.peer);\r\n                setConnection(conn);\r\n\r\n                conn.on('data', (data) => {\r\n                    console.log('Received', data);\r\n                    setMessages(prevMessages => [...prevMessages, { text: data as string, isOwn: false }]);\r\n                });\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            newPeer.destroy();\r\n        }\r\n    }, [uniqueId]);\r\n\r\n    const connectToPeer = (peerId: string) => {\r\n        if (peer && peerId) {\r\n            const conn = peer.connect(peerId);\r\n            conn.on('open', () => {\r\n                console.log('Connection established with: ' + peerId);\r\n                setConnectedTo(peerId);\r\n                setConnection(conn);\r\n            });\r\n\r\n            conn.on('data', (data) => {\r\n                console.log('Received', data);\r\n                setMessages(prevMessages => [...prevMessages, { text: data as string, isOwn: false }]);\r\n            });\r\n\r\n            setConnection(conn);\r\n        }\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (connection && inputMessage.trim() !== \"\") {\r\n            connection.send(inputMessage);\r\n            setMessages(prevMessages => [...prevMessages, { text: inputMessage, isOwn: true }]);\r\n            setInputMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Chatapp-container\">\r\n            <div className=\"chatapp-content\">\r\n                <div className=\"chatapp-header\">\r\n                    <PersonIcon\r\n                        onClick={() => setIdViewed(!idViewed)}\r\n                        style={{ fontSize: 40, color: '#000000ff' }}\r\n                    />\r\n                    <PersonAddIcon\r\n                        onClick={() => setAddperson(!addperson)}\r\n                        style={{ fontSize: 40, color: '#000000ff', marginLeft: 45 }}\r\n                    />\r\n                    {connectedTo && (\r\n                        <span style={{ color: 'white', marginLeft: '20px' }}>\r\n                            Connected to: {connectedTo}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"chatapp-messages\">\r\n                    <div className=\"chatapp-message\">\r\n\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={msg.isOwn ? \"sent-message\" : \"received-message\"}>\r\n                                {msg.text}\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatapp-input\">\r\n                    <div className=\"input-container\">\r\n                        <textarea\r\n                            className=\"mesgInput\"\r\n                            placeholder=\"Type a message...\"\r\n                            value={inputMessage}\r\n                            onChange={(e) => setInputMessage(e.target.value)}\r\n                            onKeyDown={(e) => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); sendMessage(); } }}\r\n                        />\r\n                        <SendIcon\r\n                            onClick={sendMessage}\r\n                            style={{ fontSize: 50, color: '#000000ff', marginLeft: 10, cursor: 'pointer' }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"overlay\" onClick={() => setIdViewed(!idViewed)} style={{ visibility: idViewed ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Welcome to ChatApp!</h2>\r\n                    <p>Your unique ID is:</p>\r\n                    <p className=\"unique-id\">{uniqueId}</p>\r\n                    <p>Share this ID with others to start chatting.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"overlay\" onClick={() => setAddperson(!addperson)} style={{ visibility: addperson ? 'visible' : 'hidden' }}>\r\n                <div className=\"overlay-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <h2>Add a New Contact</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter contact ID\"\r\n                        className=\"contact-input\"\r\n                        onChange={(e) => setContactId(e.target.value)}\r\n                    />\r\n                    <button\r\n                        className=\"add-contact-button\"\r\n                        onClick={() => {\r\n                            connectToPeer(contactId)\r\n                            setAddperson(false);\r\n                        }}\r\n                    >\r\n                        Add Contact\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatapp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}